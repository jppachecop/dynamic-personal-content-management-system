// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id        String   @id @default(uuid()) @db.Uuid
  name      String   @db.VarChar(255)
  email     String   @unique @db.VarChar(255)
  avatar    String?
  createdAt DateTime @default(now()) @map("created_at") @db.Timestamptz(6)
  updatedAt DateTime @updatedAt @map("updated_at") @db.Timestamptz(6)

  // Relations
  notes      Note[]
  categories Category[]

  @@index([email])
  @@map("users")
}

model Note {
  id         String   @id @default(uuid()) @db.Uuid
  title      String   @db.VarChar(500)
  content    String?
  tags       String[]
  categoryId String   @map("category_id") @db.Uuid
  userId     String   @map("user_id") @db.Uuid
  isFavorite Boolean  @default(false) @map("is_favorite")
  createdAt  DateTime @default(now()) @map("created_at") @db.Timestamptz(6)
  updatedAt  DateTime @updatedAt @map("updated_at") @db.Timestamptz(6)

  // Relations
  user     User     @relation(fields: [userId], references: [id], onDelete: Cascade)
  category Category @relation(fields: [categoryId], references: [id], onDelete: Restrict)

  @@index([userId])
  @@index([categoryId])
  @@index([createdAt(sort: Desc)])
  @@index([updatedAt(sort: Desc)])
  @@index([isFavorite])
  @@index([tags], type: Gin)
  @@map("notes")
}


model Category {
  id     String @id @default(uuid()) @db.Uuid
  name   String @db.VarChar(255)
  color  String @db.VarChar(7)
  userId String @map("user_id") @db.Uuid

  // Relations
  user  User   @relation(fields: [userId], references: [id], onDelete: Cascade)
  notes Note[]

  @@unique([name, userId])
  @@index([userId])
  @@index([name])
  @@map("categories")
}
